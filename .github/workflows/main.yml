name: CI

on:
  push:
    branches: [ master, release* ]

jobs:
  tests:
    runs-on: windows-2022
    env:
      AQUA_APP_VERSION: "0.0"
    steps:
      - uses: octokit/request-action@v2.x
        id: get_all_repo_tags
        with:
          route: GET /repos/{owner}/{repo}/git/matching-refs/tags
          owner: LeonidLapshinAquaCloud
          repo: open-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          $versions = @()
          echo '${{ steps.get_all_repo_tags.outputs.data }}' > tags.json
          Get-Content ./tags.json `
          | jq '.[].ref' `
          | ForEach-Object {$_ -replace '"',''} `
          | ForEach-Object {$_ -split "/"} `
          | Select-String -Pattern "^v${{ env.AQUA_APP_VERSION }}" `
          | ForEach-Object {$_ -match "v\d.\d.(?<version>.+)" | Out-Null; $versions += $Matches.version} 

          $latest = ($versions `
          | Where-Object -FilterScript { $_ -gt 1 } `
          | Measure-Object -Maximum).Maximum

          $latest++

          $tag = "v${{ env.AQUA_APP_VERSION }}" + "." + $latest.ToString()
          echo $tag
          echo "TAG=$(echo $tag)" >> $GITHUB_ENV

        if: contains(github.ref, 'release')
        shell: pwsh

      - run: echo "${{ env.TAG }}"

      # - name: Bump version and push tag
      #   id: tag_version
      #   uses: mathieudutour/github-tag-action@v5.6
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      # - run: "echo latest tags: ${{ steps.tag_version.outputs.new_tag }}"

      # - name: Create a GitHub release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ steps.tag_version.outputs.new_tag }}
      #     name: Release ${{ steps.tag_version.outputs.new_tag }}
      #     body: ${{ steps.tag_version.outputs.changelog }}